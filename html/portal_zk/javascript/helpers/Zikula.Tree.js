// Copyright Zikula Foundation 2010 - license GNU/LGPLv3 (or at your option, any later version).
if(typeof(Zikula)=="undefined"){Zikula={}}Zikula.Tree=Class.create({initialize:function(b,a){this.tree=$(b);this.id=this.tree.identify();a=this.decodeConfig(a);this.config=Object.extend({nodeIdPattern:/^[^_\-](?:[A-Za-z0-9\-\_]*)[_](.*)$/,toggler:"z-tree-toggle",icon:"z-tree-icon",imagesDir:"javascript/helpers/Tree/",images:{}},a||{});this.config.images=Object.extend({plus:"plus.gif",minus:"minus.gif",parent:"folder.png",parentOpen:"folder_open.png",item:"filenew.png"},this.config.images);for(var c in this.config.images){if(this.config.images.hasOwnProperty(c)){this.config.images[c]=Zikula.Config.baseURL+this.config.imagesDir+this.config.images[c]}}this.tree.select("li").each(this.initNode.bind(this));this.getStatus();this.tree.select("ul").each(function(d){if(!this.status.get(d.up("li").identify())){this.hideNode(d)}}.bind(this))},initNode:function(c){var a=c.down("."+this.config.toggler),b=c.down("li.z-tree-parent > span");if(a){a.observe("click",this.toggleNode.bindAsEventListener(this))}if(b){b.observe("click",this.toggleNode.bindAsEventListener(this))}},toggleNode:function(b){var a=b.element().up("li").down("ul");if(a!=undefined){if(a.visible()){this.hideNode(a)}else{this.showNode(a)}this.saveStatus()}},showNode:function(a){a.show();a.previous("."+this.config.toggler).writeAttribute("src",this.config.images.minus);a.previous("."+this.config.icon).writeAttribute("src",this.config.images.parentOpen);this.status.set(a.up("li").identify(),a.visible())},hideNode:function(a){a.hide();a.previous("."+this.config.toggler).writeAttribute("src",this.config.images.plus);a.previous("."+this.config.icon).writeAttribute("src",this.config.images.parent);this.status.set(a.up("li").identify(),a.visible())},getStatus:function(){this.status=Zikula.Cookie.get(this.id)?$H(Zikula.Cookie.get(this.id)):new Hash()},saveStatus:function(){Zikula.Cookie.set(this.id,this.status,3600*24*7)},getNodeId:function(a){return a.id.match(this.config.nodeIdPattern)[1]},decodeConfig:function(a){if(Object.isString(a)&&a.isJSON()){a=a.evalJSON(true)}return a},expandAll:function(a){var b=Object.isElement(a)?a:this.tree;b.select("ul").each(function(c){this.showNode(c)}.bind(this));this.saveStatus()},collapseAll:function(a){var b=Object.isElement(a)?a:this.tree;b.select("ul").reverse(true).each(function(c){this.hideNode(c)}.bind(this));this.saveStatus()},serialize:function(a){this.serialized={};a=a==undefined?this.tree:a;$(a).select("li").each(function(c,b){this.serialized[this.getNodeId(c)]=this.serializeNode(c,b)}.bind(this));return Object.toJSON(this.serialized)},serializeNode:function(b,a){return{id:this.getNodeId(b),name:b.down("a").innerHTML,lineno:a||null,parent:b.up("#"+this.tree.id+" li")?this.getNodeId(b.up("#"+this.tree.id+" li")):0}}});Object.extend(Zikula.Tree,{trees:{},add:function(b,a){if(!this.trees.hasOwnProperty(b)){this.trees[b]=new Zikula.Tree(b,a)}}});Zikula.TreeSortable=Class.create(Zikula.Tree,{initialize:function($super,b,a){a=this.decodeConfig(a);a=Object.extend({nodeSingle:"z-tree-single",nodeFirst:"z-tree-first",nodeLast:"z-tree-last",nodeParent:"z-tree-last",nodeLeaf:"z-tree-leaf",fixedParent:"z-tree-fixedparent",disabled:[],disabledForDrag:[],disabledForDrop:[],draggableClass:"z-tree-draggable",droppableClass:"z-tree-droppable",onDragClass:"z-tree-onDragClass",dropOnClass:"z-tree-dropOnClass",dropAfterClass:"z-tree-dropAfterClass",dropBeforeClass:"z-tree-dropBeforeClass",dropAfterOverlap:[0.3,0.7],expandTimeout:1500,maxDepth:0,onSave:null},a||{});$super(b,a);this.tree.addClassName("z-tree-sortable")},initNode:function($super,a){$super(a);if(this.config.disabled.include(this.getNodeId(a))){return}if(!this.config.disabledForDrag.include(this.getNodeId(a))){a.addClassName(this.config.draggableClass);new Draggable(a,{handle:this.config.icon,onEnd:this.endDrag.bind(this),onStart:this.startDrag.bind(this),revert:true,starteffect:null,scroll:window})}a.addClassName(this.config.droppableClass);Droppables.add(a,{accept:this.config.draggableClass,hoverclass:this.config.dropOnClass,overlap:"vertical",onDrop:this.dropNode.bind(this),onHover:this.hoverNode.bind(this)})},startDrag:function(a){this.dropCache={};a.element.addClassName(this.config.onDragClass)},endDrag:function(a){if(this.dropCache.lastElement){this.insertNode(a.element,this.dropCache.lastElement);this.drawNodes()}this.tree.select("."+this.config.dropAfterClass).invoke("removeClassName",this.config.dropAfterClass);this.tree.select("."+this.config.dropBeforeClass).invoke("removeClassName",this.config.dropBeforeClass);a.element.removeClassName(this.config.onDragClass)},hoverNode:function(c,b,a){window.clearTimeout(this.dropCache.timeout);this.tree.select("."+this.config.dropAfterClass).invoke("removeClassName",this.config.dropAfterClass);this.tree.select("."+this.config.dropBeforeClass).invoke("removeClassName",this.config.dropBeforeClass);var e=this.config.disabledForDrop.include(this.getNodeId(b))?0.5:this.config.dropAfterOverlap[0],d=this.config.disabledForDrop.include(this.getNodeId(b))?0.5:this.config.dropAfterOverlap[1];if(a>d){b.addClassName(this.config.dropBeforeClass);this.dropCache.lastElement=["before",b.id]}else{if(a<=e){b.addClassName(this.config.dropAfterClass);this.dropCache.lastElement=["after",b.id]}else{this.dropCache.expand=this.expandOne.bindAsEventListener(this);this.dropCache.element=b;this.dropCache.timeout=window.setTimeout(this.dropCache.expand,this.config.expandTimeout);b.removeClassName(this.config.dropAfterClass);b.removeClassName(this.config.dropBeforeClass)}}},dropNode:function(c,b,a){var d=true;if(b.hasClassName(this.config.dropAfterClass)){d=this.insertNode(c,["after",b])}else{if(b.hasClassName(this.config.dropBeforeClass)){d=this.insertNode(c,["before",b])}else{d=this.insertNode(c,["bottom",b])}}if(!d){return false}return true},insertNode:function(a,b,i){var f=$(b[1]),d=b[0],h=d=="bottom";this.prevPosition={node:a,parent:a.up("li")||null,previous:a.previous("li")||null,next:a.next("li")||null};if(this.config.maxDepth>0){var e=this.countLevels(f,"up"),k=this.countLevels(a,"down"),j=e+k+Number(h)+1;if(j>this.config.maxDepth){alert(this.config.langLabels.maxdepthreached+this.config.maxDepth);this.dropCache={};return false}}if(h){var g=f.down("ul",0);if(g==undefined){g=new Element("ul");f.insert(g)}g.show();f=g}var c={};c[d]=a;f.insert(c);if(!i&&Object.isFunction(this.config.onSave)&&!this.config.onSave(a,b,this.serialize())){this.revertInsertion();return false}this.dropCache={};this.drawNodes();return true},revertInsertion:function(){if(this.prevPosition==undefined){return}if(this.prevPosition.previous){var a=this.prevPosition.previous,b="after"}else{if(this.prevPosition.next){var a=this.prevPosition.next,b="before"}else{if(this.prevPosition.parent){var a=this.prevPosition.parent,b="bottom"}}}this.insertNode(this.prevPosition.node,[b,a],true)},countLevels:function(c,e,a){var d=0;if(e=="up"){a=(a==undefined)?this.tree:a;var b=c.ancestors();d=a.select("ul").select(function(f){return b.include(f)}).size()}else{if(e=="down"){d=c.select("li").max(function(f){return this.countLevels(f,"up",c)}.bind(this))}}return isNaN(d)?0:d},expandOne:function(){if(this.dropCache.element&&this.dropCache.element.down("ul")!=undefined){this.showNode(this.dropCache.element.down("ul"));this.dropCache.element=false;this.saveStatus()}},drawNodes:function(){this.tree.select("li").each(this.drawNode.bind(this))},drawNode:function(a){[this.config.nodeSingle,this.config.nodeFirst,this.config.nodeLast,this.config.nodeParent,this.config.nodeLeaf].each(function(b){$(a).removeClassName(b)});if(a.next()==undefined){a.addClassName(this.config.nodeLast)}if(a.up("ul").select("li").size()==1){a.addClassName(this.config.nodeSingle)}if(a.down("li")==undefined&&a.down("ul")!=undefined){a.down("ul").remove()}if(a.down("a").hasClassName(this.config.fixedParent)||a.down("li")!=undefined){if(a.down("ul")){a.addClassName(this.config.nodeParent);if(a.down("ul").visible()){a.down("."+this.config.toggler).writeAttribute({src:this.config.images.minus});a.down("."+this.config.icon).writeAttribute("src",this.config.images.parentOpen)}else{a.down("."+this.config.icon).writeAttribute("src",this.config.images.parent)}}else{a.addClassName(this.config.nodeLeaf);a.down("."+this.config.icon).writeAttribute("src",this.config.images.parent)}}else{a.addClassName(this.config.nodeLeaf);a.down("."+this.config.icon).writeAttribute("src",this.config.images.item)}}});Object.extend(Zikula.TreeSortable,{trees:{},add:function(b,a){if(!this.trees.hasOwnProperty(b)){this.trees[b]=new Zikula.TreeSortable(b,a)}}});